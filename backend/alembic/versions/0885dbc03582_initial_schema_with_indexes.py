"""initial schema with indexes

Revision ID: 0885dbc03582
Revises: 
Create Date: 2025-10-31 01:57:31.188399

"""
from typing import Sequence, Optional

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0885dbc03582'
down_revision: Optional[str] = None
branch_labels: Optional[Sequence[str]] = None
depends_on: Optional[Sequence[str]] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sync_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_generated_id', sa.UUID(), nullable=False),
    sa.Column('table_name', sa.String(length=50), nullable=False),
    sa.Column('server_id', sa.UUID(), nullable=False),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_sync_token_table_seen', 'sync_tokens', ['table_name', 'last_seen_at'], unique=False)
    op.create_index(op.f('ix_sync_tokens_client_generated_id'), 'sync_tokens', ['client_generated_id'], unique=True)
    op.create_index(op.f('ix_sync_tokens_last_seen_at'), 'sync_tokens', ['last_seen_at'], unique=False)
    op.create_index(op.f('ix_sync_tokens_server_id'), 'sync_tokens', ['server_id'], unique=False)
    op.create_index(op.f('ix_sync_tokens_table_name'), 'sync_tokens', ['table_name'], unique=False)
    op.create_table('districts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('city_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'SUPERVISOR', 'ENGINEER', name='userrole'), nullable=False),
    sa.Column('city_id', sa.UUID(), nullable=True),
    sa.Column('district_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('scopes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('attachments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('bucket', sa.String(length=100), nullable=True),
    sa.Column('path', sa.String(length=500), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('entity_type', sa.Enum('OBJECT', 'UNIT', 'CUSTOMER', 'VISIT', name='entitytype'), nullable=True),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('actor_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'EXPORT', 'LOGIN', 'LOGOUT', name='actiontype'), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('before_json', sa.JSON(), nullable=True),
    sa.Column('after_json', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('occurred_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_audit_actor_date', 'audit_logs', ['actor_id', 'occurred_at'], unique=False)
    op.create_index('ix_audit_entity_type_id_date', 'audit_logs', ['entity_type', 'entity_id', 'occurred_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_occurred_at'), 'audit_logs', ['occurred_at'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.Enum('OBJECT', 'UNIT', 'CUSTOMER', 'VISIT', name='entitytype'), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('objects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('MKD', 'HOTEL', 'CAFE', 'SCHOOL', 'HOSPITAL', 'BUSINESS_CENTER', 'SHOPPING_CENTER', 'OTHER', name='objecttype'), nullable=False),
    sa.Column('address', sa.String(length=500), nullable=False),
    sa.Column('city_id', sa.UUID(), nullable=False),
    sa.Column('district_id', sa.UUID(), nullable=True),
    sa.Column('gps_lat', sa.Float(), nullable=True),
    sa.Column('gps_lng', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('NEW', 'INTEREST', 'CALLBACK', 'REJECTED', 'DONE', name='objectstatus'), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('responsible_user_id', sa.UUID(), nullable=True),
    sa.Column('visits_count', sa.Integer(), nullable=False),
    sa.Column('last_visit_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_objects_city_id', 'objects', ['city_id'], unique=False)
    op.create_index('ix_objects_city_status', 'objects', ['city_id', 'status'], unique=False)
    op.create_index('ix_objects_district_id', 'objects', ['district_id'], unique=False)
    op.create_index('ix_objects_gps', 'objects', ['gps_lat', 'gps_lng'], unique=False)
    op.create_index('ix_objects_last_visit_at', 'objects', ['last_visit_at'], unique=False)
    op.create_index('ix_objects_responsible_user', 'objects', ['responsible_user_id'], unique=False)
    op.create_index('ix_objects_status', 'objects', ['status'], unique=False)
    op.create_index('ix_objects_updated_at', 'objects', ['updated_at'], unique=False)
    op.create_index('ix_objects_version', 'objects', ['version'], unique=False)
    op.create_table('report_jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('entity', sa.String(length=50), nullable=False),
    sa.Column('filters_json', sa.JSON(), nullable=True),
    sa.Column('columns', sa.JSON(), nullable=True),
    sa.Column('sort', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('rq_job_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_report_job_owner_created', 'report_jobs', ['owner_id', 'created_at'], unique=False)
    op.create_index('ix_report_job_status_created', 'report_jobs', ['status', 'created_at'], unique=False)
    op.create_table('units',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('unit_number', sa.String(length=50), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('entrance', sa.Integer(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_units_object_id', 'units', ['object_id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('unit_id', sa.UUID(), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('portrait_text', sa.Text(), nullable=True),
    sa.Column('current_provider', sa.String(length=255), nullable=True),
    sa.Column('provider_rating', sa.Integer(), nullable=True),
    sa.Column('satisfied', sa.Boolean(), nullable=True),
    sa.Column('interests', sa.JSON(), nullable=True),
    sa.Column('preferred_call_time', sa.String(length=20), nullable=True),
    sa.Column('desired_price', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('gdpr_consent', sa.Boolean(), nullable=False),
    sa.Column('last_interaction_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_customers_object_id', 'customers', ['object_id'], unique=False)
    op.create_index(op.f('ix_customers_phone'), 'customers', ['phone'], unique=True)
    op.create_index('ix_customers_unit_id', 'customers', ['unit_id'], unique=False)
    op.create_index('ix_customers_updated_at', 'customers', ['updated_at'], unique=False)
    op.create_table('visits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('unit_id', sa.UUID(), nullable=True),
    sa.Column('customer_id', sa.UUID(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('engineer_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PLANNED', 'IN_PROGRESS', 'DONE', 'CANCELLED', name='visitstatus'), nullable=False),
    sa.Column('interests', sa.JSON(), nullable=True),
    sa.Column('outcome_text', sa.Text(), nullable=True),
    sa.Column('next_action_due_at', sa.DateTime(), nullable=True),
    sa.Column('geo_captured_lat', sa.Float(), nullable=True),
    sa.Column('geo_captured_lng', sa.Float(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['engineer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_visits_engineer_id', 'visits', ['engineer_id'], unique=False)
    op.create_index('ix_visits_engineer_scheduled', 'visits', ['engineer_id', 'scheduled_at'], unique=False)
    op.create_index('ix_visits_finished_at', 'visits', ['finished_at'], unique=False)
    op.create_index('ix_visits_next_action_due_at', 'visits', ['next_action_due_at'], unique=False)
    op.create_index('ix_visits_object_id', 'visits', ['object_id'], unique=False)
    op.create_index('ix_visits_object_status', 'visits', ['object_id', 'status'], unique=False)
    op.create_index('ix_visits_scheduled_at', 'visits', ['scheduled_at'], unique=False)
    op.create_index('ix_visits_status', 'visits', ['status'], unique=False)
    op.create_index('ix_visits_version', 'visits', ['version'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_visits_version', table_name='visits')
    op.drop_index('ix_visits_status', table_name='visits')
    op.drop_index('ix_visits_scheduled_at', table_name='visits')
    op.drop_index('ix_visits_object_status', table_name='visits')
    op.drop_index('ix_visits_object_id', table_name='visits')
    op.drop_index('ix_visits_next_action_due_at', table_name='visits')
    op.drop_index('ix_visits_finished_at', table_name='visits')
    op.drop_index('ix_visits_engineer_scheduled', table_name='visits')
    op.drop_index('ix_visits_engineer_id', table_name='visits')
    op.drop_table('visits')
    op.drop_index('ix_customers_updated_at', table_name='customers')
    op.drop_index('ix_customers_unit_id', table_name='customers')
    op.drop_index(op.f('ix_customers_phone'), table_name='customers')
    op.drop_index('ix_customers_object_id', table_name='customers')
    op.drop_table('customers')
    op.drop_index('ix_units_object_id', table_name='units')
    op.drop_table('units')
    op.drop_index('ix_report_job_status_created', table_name='report_jobs')
    op.drop_index('ix_report_job_owner_created', table_name='report_jobs')
    op.drop_table('report_jobs')
    op.drop_index('ix_objects_version', table_name='objects')
    op.drop_index('ix_objects_updated_at', table_name='objects')
    op.drop_index('ix_objects_status', table_name='objects')
    op.drop_index('ix_objects_responsible_user', table_name='objects')
    op.drop_index('ix_objects_last_visit_at', table_name='objects')
    op.drop_index('ix_objects_gps', table_name='objects')
    op.drop_index('ix_objects_district_id', table_name='objects')
    op.drop_index('ix_objects_city_status', table_name='objects')
    op.drop_index('ix_objects_city_id', table_name='objects')
    op.drop_table('objects')
    op.drop_table('comments')
    op.drop_index(op.f('ix_audit_logs_occurred_at'), table_name='audit_logs')
    op.drop_index('ix_audit_entity_type_id_date', table_name='audit_logs')
    op.drop_index('ix_audit_actor_date', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('attachments')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('districts')
    op.drop_index(op.f('ix_sync_tokens_table_name'), table_name='sync_tokens')
    op.drop_index(op.f('ix_sync_tokens_server_id'), table_name='sync_tokens')
    op.drop_index(op.f('ix_sync_tokens_last_seen_at'), table_name='sync_tokens')
    op.drop_index(op.f('ix_sync_tokens_client_generated_id'), table_name='sync_tokens')
    op.drop_index('ix_sync_token_table_seen', table_name='sync_tokens')
    op.drop_table('sync_tokens')
    op.drop_table('cities')
    # ### end Alembic commands ###

